# Cloudflare integration mode configuration
# Full-featured configuration with Cloudflare Workers and Tunnel

server:
  host: localhost
  port: 8080
  grpc_port: 50051
  read_timeout: 30s
  write_timeout: 30s

# Use Cloudflare Auth Worker for both secret and version management
# Repository list is automatically retrieved via Service Binding from GitHub Webhook Worker
secrets:
  mode: cloudflare
  cloudflare:
    worker_url: https://ohishi-auth.mtamaramu.com
    private_key_path: ./keys/client_private.pem

# GitHub version management uses the same Auth Worker
# (worker_url inherited from secrets config above)
github:
  mode: cloudflare

  # Choose update mode: polling or webhook
  update_mode:
    # Option 1: Polling mode (simpler, no tunnel required)
    polling:
      enabled: true
      interval: 5m

    # Option 2: Webhook mode (requires tunnel)
    # webhook:
    #   enabled: true
    #   path: /webhook/cloudflare

# Cloudflare Tunnel for webhook reception (optional)
# Requires: cloudflared installed
tunnel:
  enabled: false  # Set to true to enable webhook mode
  port: 8080
  protocol: http2  # or "quic"

# Managed processes
processes:
  - name: my-service
    repository: your-username/your-repo
    binary_path: ./binaries/my-service/latest/my-service.exe
    args:
      - --port
      - "9000"
    env:
      # Static environment variables
      SERVICE_NAME: my-service
      LOG_LEVEL: info
      # Cloudflare-managed secrets will be automatically added
      # from cloudflare-auth-worker (e.g., DB_PASSWORD, API_KEY)
    work_dir: ./processes/my-service
    port: 9000
    health_check:
      enabled: true
      endpoint: http://localhost:9000/health
      interval: 30s
      timeout: 5s
      retries: 3
    auto_restart: true
    max_instances: 2

  - name: another-service
    repository: your-username/another-repo
    binary_path: ./binaries/another-service/latest/another-service.exe
    port: 9001
    env:
      SERVICE_NAME: another-service
    work_dir: ./processes/another-service
    auto_restart: true
    max_instances: 1
