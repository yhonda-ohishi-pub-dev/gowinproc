// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: src/internal/proto/process_manager.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListProcessesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProcessesRequest) Reset() {
	*x = ListProcessesRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProcessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessesRequest) ProtoMessage() {}

func (x *ListProcessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessesRequest.ProtoReflect.Descriptor instead.
func (*ListProcessesRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{0}
}

type ListProcessesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessNames  []string               `protobuf:"bytes,1,rep,name=process_names,json=processNames,proto3" json:"process_names,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProcessesResponse) Reset() {
	*x = ListProcessesResponse{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProcessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessesResponse) ProtoMessage() {}

func (x *ListProcessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessesResponse.ProtoReflect.Descriptor instead.
func (*ListProcessesResponse) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ListProcessesResponse) GetProcessNames() []string {
	if x != nil {
		return x.ProcessNames
	}
	return nil
}

func (x *ListProcessesResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProcessRequest) Reset() {
	*x = GetProcessRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessRequest) ProtoMessage() {}

func (x *GetProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessRequest.ProtoReflect.Descriptor instead.
func (*GetProcessRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{2}
}

func (x *GetProcessRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

type ProcessInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Instances     []*ProcessInstance     `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
	InstanceCount int32                  `protobuf:"varint,3,opt,name=instance_count,json=instanceCount,proto3" json:"instance_count,omitempty"`
	Config        *ProcessConfig         `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessInfo) GetInstances() []*ProcessInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *ProcessInfo) GetInstanceCount() int32 {
	if x != nil {
		return x.InstanceCount
	}
	return 0
}

func (x *ProcessInfo) GetConfig() *ProcessConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ProcessInstance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProcessName   string                 `protobuf:"bytes,2,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Pid           int32                  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	StartTime     int64                  `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Unix timestamp
	Port          int32                  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	EnvFilePath   string                 `protobuf:"bytes,7,opt,name=env_file_path,json=envFilePath,proto3" json:"env_file_path,omitempty"`
	Metrics       *ProcessMetrics        `protobuf:"bytes,8,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessInstance) Reset() {
	*x = ProcessInstance{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInstance) ProtoMessage() {}

func (x *ProcessInstance) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInstance.ProtoReflect.Descriptor instead.
func (*ProcessInstance) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcessInstance) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *ProcessInstance) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessInstance) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessInstance) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProcessInstance) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProcessInstance) GetEnvFilePath() string {
	if x != nil {
		return x.EnvFilePath
	}
	return ""
}

func (x *ProcessInstance) GetMetrics() *ProcessMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ProcessConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BinaryPath    string                 `protobuf:"bytes,2,opt,name=binary_path,json=binaryPath,proto3" json:"binary_path,omitempty"`
	Args          []string               `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	WorkDir       string                 `protobuf:"bytes,4,opt,name=work_dir,json=workDir,proto3" json:"work_dir,omitempty"`
	Port          int32                  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	MinInstances  int32                  `protobuf:"varint,6,opt,name=min_instances,json=minInstances,proto3" json:"min_instances,omitempty"`
	MaxInstances  int32                  `protobuf:"varint,7,opt,name=max_instances,json=maxInstances,proto3" json:"max_instances,omitempty"`
	AutoRestart   bool                   `protobuf:"varint,8,opt,name=auto_restart,json=autoRestart,proto3" json:"auto_restart,omitempty"`
	Github        *GitHubConfig          `protobuf:"bytes,9,opt,name=github,proto3" json:"github,omitempty"`
	Secrets       *SecretsConfig         `protobuf:"bytes,10,opt,name=secrets,proto3" json:"secrets,omitempty"`
	Certificates  *CertificatesConfig    `protobuf:"bytes,11,opt,name=certificates,proto3" json:"certificates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessConfig) Reset() {
	*x = ProcessConfig{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessConfig) ProtoMessage() {}

func (x *ProcessConfig) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessConfig.ProtoReflect.Descriptor instead.
func (*ProcessConfig) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessConfig) GetBinaryPath() string {
	if x != nil {
		return x.BinaryPath
	}
	return ""
}

func (x *ProcessConfig) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ProcessConfig) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *ProcessConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProcessConfig) GetMinInstances() int32 {
	if x != nil {
		return x.MinInstances
	}
	return 0
}

func (x *ProcessConfig) GetMaxInstances() int32 {
	if x != nil {
		return x.MaxInstances
	}
	return 0
}

func (x *ProcessConfig) GetAutoRestart() bool {
	if x != nil {
		return x.AutoRestart
	}
	return false
}

func (x *ProcessConfig) GetGithub() *GitHubConfig {
	if x != nil {
		return x.Github
	}
	return nil
}

func (x *ProcessConfig) GetSecrets() *SecretsConfig {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *ProcessConfig) GetCertificates() *CertificatesConfig {
	if x != nil {
		return x.Certificates
	}
	return nil
}

type GitHubConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Repo                string                 `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	AutoUpdate          bool                   `protobuf:"varint,2,opt,name=auto_update,json=autoUpdate,proto3" json:"auto_update,omitempty"`
	UpdateCheckInterval int32                  `protobuf:"varint,3,opt,name=update_check_interval,json=updateCheckInterval,proto3" json:"update_check_interval,omitempty"` // seconds
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GitHubConfig) Reset() {
	*x = GitHubConfig{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitHubConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitHubConfig) ProtoMessage() {}

func (x *GitHubConfig) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitHubConfig.ProtoReflect.Descriptor instead.
func (*GitHubConfig) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{6}
}

func (x *GitHubConfig) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *GitHubConfig) GetAutoUpdate() bool {
	if x != nil {
		return x.AutoUpdate
	}
	return false
}

func (x *GitHubConfig) GetUpdateCheckInterval() int32 {
	if x != nil {
		return x.UpdateCheckInterval
	}
	return 0
}

type SecretsConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"` // "local" or "cloudflare"
	EnvFile       string                 `protobuf:"bytes,3,opt,name=env_file,json=envFile,proto3" json:"env_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecretsConfig) Reset() {
	*x = SecretsConfig{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretsConfig) ProtoMessage() {}

func (x *SecretsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretsConfig.ProtoReflect.Descriptor instead.
func (*SecretsConfig) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{7}
}

func (x *SecretsConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SecretsConfig) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SecretsConfig) GetEnvFile() string {
	if x != nil {
		return x.EnvFile
	}
	return ""
}

type CertificatesConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CertPath      string                 `protobuf:"bytes,2,opt,name=cert_path,json=certPath,proto3" json:"cert_path,omitempty"`
	KeyPath       string                 `protobuf:"bytes,3,opt,name=key_path,json=keyPath,proto3" json:"key_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertificatesConfig) Reset() {
	*x = CertificatesConfig{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificatesConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificatesConfig) ProtoMessage() {}

func (x *CertificatesConfig) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificatesConfig.ProtoReflect.Descriptor instead.
func (*CertificatesConfig) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{8}
}

func (x *CertificatesConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CertificatesConfig) GetCertPath() string {
	if x != nil {
		return x.CertPath
	}
	return ""
}

func (x *CertificatesConfig) GetKeyPath() string {
	if x != nil {
		return x.KeyPath
	}
	return ""
}

type StartProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartProcessRequest) Reset() {
	*x = StartProcessRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProcessRequest) ProtoMessage() {}

func (x *StartProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProcessRequest.ProtoReflect.Descriptor instead.
func (*StartProcessRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{9}
}

func (x *StartProcessRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

type StopProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	InstanceId    string                 `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // Optional - if empty, stops all instances
	All           bool                   `protobuf:"varint,3,opt,name=all,proto3" json:"all,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopProcessRequest) Reset() {
	*x = StopProcessRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopProcessRequest) ProtoMessage() {}

func (x *StopProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopProcessRequest.ProtoReflect.Descriptor instead.
func (*StopProcessRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{10}
}

func (x *StopProcessRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *StopProcessRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *StopProcessRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type RestartProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	InstanceId    string                 `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // Optional - if empty, restarts all instances
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartProcessRequest) Reset() {
	*x = RestartProcessRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartProcessRequest) ProtoMessage() {}

func (x *RestartProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartProcessRequest.ProtoReflect.Descriptor instead.
func (*RestartProcessRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{11}
}

func (x *RestartProcessRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *RestartProcessRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type GetMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	InstanceId    string                 `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // Optional - if empty, returns aggregated metrics
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{12}
}

func (x *GetMetricsRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *GetMetricsRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type Metrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Instances     []*ProcessMetrics      `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
	Aggregated    *AggregatedMetrics     `protobuf:"bytes,3,opt,name=aggregated,proto3" json:"aggregated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{13}
}

func (x *Metrics) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *Metrics) GetInstances() []*ProcessMetrics {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *Metrics) GetAggregated() *AggregatedMetrics {
	if x != nil {
		return x.Aggregated
	}
	return nil
}

type ProcessMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InstanceId    string                 `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	CpuUsage      float64                `protobuf:"fixed64,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`         // percentage
	MemoryUsage   uint64                 `protobuf:"varint,3,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"` // bytes
	DiskRead      uint64                 `protobuf:"varint,4,opt,name=disk_read,json=diskRead,proto3" json:"disk_read,omitempty"`          // bytes
	DiskWrite     uint64                 `protobuf:"varint,5,opt,name=disk_write,json=diskWrite,proto3" json:"disk_write,omitempty"`       // bytes
	NetworkRecv   uint64                 `protobuf:"varint,6,opt,name=network_recv,json=networkRecv,proto3" json:"network_recv,omitempty"` // bytes
	NetworkSent   uint64                 `protobuf:"varint,7,opt,name=network_sent,json=networkSent,proto3" json:"network_sent,omitempty"` // bytes
	Uptime        int64                  `protobuf:"varint,8,opt,name=uptime,proto3" json:"uptime,omitempty"`                              // seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMetrics) Reset() {
	*x = ProcessMetrics{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMetrics) ProtoMessage() {}

func (x *ProcessMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMetrics.ProtoReflect.Descriptor instead.
func (*ProcessMetrics) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{14}
}

func (x *ProcessMetrics) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ProcessMetrics) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *ProcessMetrics) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *ProcessMetrics) GetDiskRead() uint64 {
	if x != nil {
		return x.DiskRead
	}
	return 0
}

func (x *ProcessMetrics) GetDiskWrite() uint64 {
	if x != nil {
		return x.DiskWrite
	}
	return 0
}

func (x *ProcessMetrics) GetNetworkRecv() uint64 {
	if x != nil {
		return x.NetworkRecv
	}
	return 0
}

func (x *ProcessMetrics) GetNetworkSent() uint64 {
	if x != nil {
		return x.NetworkSent
	}
	return 0
}

func (x *ProcessMetrics) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

type AggregatedMetrics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TotalCpuUsage    float64                `protobuf:"fixed64,1,opt,name=total_cpu_usage,json=totalCpuUsage,proto3" json:"total_cpu_usage,omitempty"`
	TotalMemoryUsage uint64                 `protobuf:"varint,2,opt,name=total_memory_usage,json=totalMemoryUsage,proto3" json:"total_memory_usage,omitempty"`
	TotalDiskRead    uint64                 `protobuf:"varint,3,opt,name=total_disk_read,json=totalDiskRead,proto3" json:"total_disk_read,omitempty"`
	TotalDiskWrite   uint64                 `protobuf:"varint,4,opt,name=total_disk_write,json=totalDiskWrite,proto3" json:"total_disk_write,omitempty"`
	TotalNetworkRecv uint64                 `protobuf:"varint,5,opt,name=total_network_recv,json=totalNetworkRecv,proto3" json:"total_network_recv,omitempty"`
	TotalNetworkSent uint64                 `protobuf:"varint,6,opt,name=total_network_sent,json=totalNetworkSent,proto3" json:"total_network_sent,omitempty"`
	InstanceCount    int32                  `protobuf:"varint,7,opt,name=instance_count,json=instanceCount,proto3" json:"instance_count,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AggregatedMetrics) Reset() {
	*x = AggregatedMetrics{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregatedMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedMetrics) ProtoMessage() {}

func (x *AggregatedMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedMetrics.ProtoReflect.Descriptor instead.
func (*AggregatedMetrics) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{15}
}

func (x *AggregatedMetrics) GetTotalCpuUsage() float64 {
	if x != nil {
		return x.TotalCpuUsage
	}
	return 0
}

func (x *AggregatedMetrics) GetTotalMemoryUsage() uint64 {
	if x != nil {
		return x.TotalMemoryUsage
	}
	return 0
}

func (x *AggregatedMetrics) GetTotalDiskRead() uint64 {
	if x != nil {
		return x.TotalDiskRead
	}
	return 0
}

func (x *AggregatedMetrics) GetTotalDiskWrite() uint64 {
	if x != nil {
		return x.TotalDiskWrite
	}
	return 0
}

func (x *AggregatedMetrics) GetTotalNetworkRecv() uint64 {
	if x != nil {
		return x.TotalNetworkRecv
	}
	return 0
}

func (x *AggregatedMetrics) GetTotalNetworkSent() uint64 {
	if x != nil {
		return x.TotalNetworkSent
	}
	return 0
}

func (x *AggregatedMetrics) GetInstanceCount() int32 {
	if x != nil {
		return x.InstanceCount
	}
	return 0
}

type ScaleProcessRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProcessName     string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	TargetInstances int32                  `protobuf:"varint,2,opt,name=target_instances,json=targetInstances,proto3" json:"target_instances,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ScaleProcessRequest) Reset() {
	*x = ScaleProcessRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleProcessRequest) ProtoMessage() {}

func (x *ScaleProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleProcessRequest.ProtoReflect.Descriptor instead.
func (*ScaleProcessRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{16}
}

func (x *ScaleProcessRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *ScaleProcessRequest) GetTargetInstances() int32 {
	if x != nil {
		return x.TargetInstances
	}
	return 0
}

type UpdateAllRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Strategy         string                 `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"` // rolling, blue-green, immediate
	Force            bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	Timeout          int32                  `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`                                             // seconds
	HealthCheckDelay int32                  `protobuf:"varint,4,opt,name=health_check_delay,json=healthCheckDelay,proto3" json:"health_check_delay,omitempty"` // seconds
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateAllRequest) Reset() {
	*x = UpdateAllRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAllRequest) ProtoMessage() {}

func (x *UpdateAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAllRequest.ProtoReflect.Descriptor instead.
func (*UpdateAllRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateAllRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *UpdateAllRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *UpdateAllRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *UpdateAllRequest) GetHealthCheckDelay() int32 {
	if x != nil {
		return x.HealthCheckDelay
	}
	return 0
}

type UpdateProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // empty string = latest version
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	Strategy      string                 `protobuf:"bytes,4,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Instances     []int32                `protobuf:"varint,5,rep,packed,name=instances,proto3" json:"instances,omitempty"` // specific instance indices (optional)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProcessRequest) Reset() {
	*x = UpdateProcessRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProcessRequest) ProtoMessage() {}

func (x *UpdateProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProcessRequest.ProtoReflect.Descriptor instead.
func (*UpdateProcessRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateProcessRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *UpdateProcessRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateProcessRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *UpdateProcessRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *UpdateProcessRequest) GetInstances() []int32 {
	if x != nil {
		return x.Instances
	}
	return nil
}

type UpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpdateId      string                 `protobuf:"bytes,3,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	Processes     []*ProcessUpdateStatus `protobuf:"bytes,4,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateResponse) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

func (x *UpdateResponse) GetProcesses() []*ProcessUpdateStatus {
	if x != nil {
		return x.Processes
	}
	return nil
}

type ProcessUpdateStatus struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CurrentVersion    string                 `protobuf:"bytes,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	TargetVersion     string                 `protobuf:"bytes,3,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
	Status            string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                                 // updating, completed, failed
	EstimatedDuration int32                  `protobuf:"varint,5,opt,name=estimated_duration,json=estimatedDuration,proto3" json:"estimated_duration,omitempty"` // seconds
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProcessUpdateStatus) Reset() {
	*x = ProcessUpdateStatus{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessUpdateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessUpdateStatus) ProtoMessage() {}

func (x *ProcessUpdateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessUpdateStatus.ProtoReflect.Descriptor instead.
func (*ProcessUpdateStatus) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{20}
}

func (x *ProcessUpdateStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessUpdateStatus) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

func (x *ProcessUpdateStatus) GetTargetVersion() string {
	if x != nil {
		return x.TargetVersion
	}
	return ""
}

func (x *ProcessUpdateStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessUpdateStatus) GetEstimatedDuration() int32 {
	if x != nil {
		return x.EstimatedDuration
	}
	return 0
}

type GetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{21}
}

func (x *GetVersionRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

type VersionInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProcessName     string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	CurrentVersion  string                 `protobuf:"bytes,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	LatestVersion   string                 `protobuf:"bytes,3,opt,name=latest_version,json=latestVersion,proto3" json:"latest_version,omitempty"`
	UpdateAvailable bool                   `protobuf:"varint,4,opt,name=update_available,json=updateAvailable,proto3" json:"update_available,omitempty"`
	Instances       []*InstanceVersion     `protobuf:"bytes,5,rep,name=instances,proto3" json:"instances,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{22}
}

func (x *VersionInfo) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *VersionInfo) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

func (x *VersionInfo) GetLatestVersion() string {
	if x != nil {
		return x.LatestVersion
	}
	return ""
}

func (x *VersionInfo) GetUpdateAvailable() bool {
	if x != nil {
		return x.UpdateAvailable
	}
	return false
}

func (x *VersionInfo) GetInstances() []*InstanceVersion {
	if x != nil {
		return x.Instances
	}
	return nil
}

type InstanceVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Uptime        int64                  `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"` // seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstanceVersion) Reset() {
	*x = InstanceVersion{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceVersion) ProtoMessage() {}

func (x *InstanceVersion) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceVersion.ProtoReflect.Descriptor instead.
func (*InstanceVersion) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{23}
}

func (x *InstanceVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InstanceVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstanceVersion) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

type ListUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUpdatesRequest) Reset() {
	*x = ListUpdatesRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUpdatesRequest) ProtoMessage() {}

func (x *ListUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUpdatesRequest.ProtoReflect.Descriptor instead.
func (*ListUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{24}
}

type ListUpdatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Updates       []*UpdateAvailable     `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUpdatesResponse) Reset() {
	*x = ListUpdatesResponse{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUpdatesResponse) ProtoMessage() {}

func (x *ListUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUpdatesResponse.ProtoReflect.Descriptor instead.
func (*ListUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{25}
}

func (x *ListUpdatesResponse) GetUpdates() []*UpdateAvailable {
	if x != nil {
		return x.Updates
	}
	return nil
}

type UpdateAvailable struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProcessName    string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	CurrentVersion string                 `protobuf:"bytes,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	LatestVersion  string                 `protobuf:"bytes,3,opt,name=latest_version,json=latestVersion,proto3" json:"latest_version,omitempty"`
	ReleaseDate    string                 `protobuf:"bytes,4,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	ReleaseNotes   string                 `protobuf:"bytes,5,opt,name=release_notes,json=releaseNotes,proto3" json:"release_notes,omitempty"`
	UpToDate       bool                   `protobuf:"varint,6,opt,name=up_to_date,json=upToDate,proto3" json:"up_to_date,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateAvailable) Reset() {
	*x = UpdateAvailable{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAvailable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvailable) ProtoMessage() {}

func (x *UpdateAvailable) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvailable.ProtoReflect.Descriptor instead.
func (*UpdateAvailable) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateAvailable) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *UpdateAvailable) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

func (x *UpdateAvailable) GetLatestVersion() string {
	if x != nil {
		return x.LatestVersion
	}
	return ""
}

func (x *UpdateAvailable) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *UpdateAvailable) GetReleaseNotes() string {
	if x != nil {
		return x.ReleaseNotes
	}
	return ""
}

func (x *UpdateAvailable) GetUpToDate() bool {
	if x != nil {
		return x.UpToDate
	}
	return false
}

type RollbackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // empty string = previous version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackRequest) Reset() {
	*x = RollbackRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackRequest) ProtoMessage() {}

func (x *RollbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackRequest.ProtoReflect.Descriptor instead.
func (*RollbackRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{27}
}

func (x *RollbackRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *RollbackRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type RollbackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ProcessName   string                 `protobuf:"bytes,2,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	FromVersion   string                 `protobuf:"bytes,3,opt,name=from_version,json=fromVersion,proto3" json:"from_version,omitempty"`
	ToVersion     string                 `protobuf:"bytes,4,opt,name=to_version,json=toVersion,proto3" json:"to_version,omitempty"`
	RollbackId    string                 `protobuf:"bytes,5,opt,name=rollback_id,json=rollbackId,proto3" json:"rollback_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackResponse) Reset() {
	*x = RollbackResponse{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackResponse) ProtoMessage() {}

func (x *RollbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackResponse.ProtoReflect.Descriptor instead.
func (*RollbackResponse) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{28}
}

func (x *RollbackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RollbackResponse) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *RollbackResponse) GetFromVersion() string {
	if x != nil {
		return x.FromVersion
	}
	return ""
}

func (x *RollbackResponse) GetToVersion() string {
	if x != nil {
		return x.ToVersion
	}
	return ""
}

func (x *RollbackResponse) GetRollbackId() string {
	if x != nil {
		return x.RollbackId
	}
	return ""
}

type WatchUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UpdateId      string                 `protobuf:"bytes,1,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchUpdateRequest) Reset() {
	*x = WatchUpdateRequest{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUpdateRequest) ProtoMessage() {}

func (x *WatchUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUpdateRequest.ProtoReflect.Descriptor instead.
func (*WatchUpdateRequest) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{29}
}

func (x *WatchUpdateRequest) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

type UpdateStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UpdateId      string                 `protobuf:"bytes,1,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	ProcessName   string                 `protobuf:"bytes,2,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`      // downloading, extracting, stopping, starting, completed, failed
	Progress      int32                  `protobuf:"varint,4,opt,name=progress,proto3" json:"progress,omitempty"` // 0-100
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatus) Reset() {
	*x = UpdateStatus{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatus) ProtoMessage() {}

func (x *UpdateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatus.ProtoReflect.Descriptor instead.
func (*UpdateStatus) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateStatus) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

func (x *UpdateStatus) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *UpdateStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateStatus) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *UpdateStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_src_internal_proto_process_manager_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_src_internal_proto_process_manager_proto_rawDescGZIP(), []int{31}
}

var File_src_internal_proto_process_manager_proto protoreflect.FileDescriptor

const file_src_internal_proto_process_manager_proto_rawDesc = "" +
	"\n" +
	"(src/internal/proto/process_manager.proto\x12\x05proto\"\x16\n" +
	"\x14ListProcessesRequest\"R\n" +
	"\x15ListProcessesResponse\x12#\n" +
	"\rprocess_names\x18\x01 \x03(\tR\fprocessNames\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"6\n" +
	"\x11GetProcessRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\"\xac\x01\n" +
	"\vProcessInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\tinstances\x18\x02 \x03(\v2\x16.proto.ProcessInstanceR\tinstances\x12%\n" +
	"\x0einstance_count\x18\x03 \x01(\x05R\rinstanceCount\x12,\n" +
	"\x06config\x18\x04 \x01(\v2\x14.proto.ProcessConfigR\x06config\"\xf6\x01\n" +
	"\x0fProcessInstance\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fprocess_name\x18\x02 \x01(\tR\vprocessName\x12\x10\n" +
	"\x03pid\x18\x03 \x01(\x05R\x03pid\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"start_time\x18\x05 \x01(\x03R\tstartTime\x12\x12\n" +
	"\x04port\x18\x06 \x01(\x05R\x04port\x12\"\n" +
	"\renv_file_path\x18\a \x01(\tR\venvFilePath\x12/\n" +
	"\ametrics\x18\b \x01(\v2\x15.proto.ProcessMetricsR\ametrics\"\x90\x03\n" +
	"\rProcessConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vbinary_path\x18\x02 \x01(\tR\n" +
	"binaryPath\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12\x19\n" +
	"\bwork_dir\x18\x04 \x01(\tR\aworkDir\x12\x12\n" +
	"\x04port\x18\x05 \x01(\x05R\x04port\x12#\n" +
	"\rmin_instances\x18\x06 \x01(\x05R\fminInstances\x12#\n" +
	"\rmax_instances\x18\a \x01(\x05R\fmaxInstances\x12!\n" +
	"\fauto_restart\x18\b \x01(\bR\vautoRestart\x12+\n" +
	"\x06github\x18\t \x01(\v2\x13.proto.GitHubConfigR\x06github\x12.\n" +
	"\asecrets\x18\n" +
	" \x01(\v2\x14.proto.SecretsConfigR\asecrets\x12=\n" +
	"\fcertificates\x18\v \x01(\v2\x19.proto.CertificatesConfigR\fcertificates\"w\n" +
	"\fGitHubConfig\x12\x12\n" +
	"\x04repo\x18\x01 \x01(\tR\x04repo\x12\x1f\n" +
	"\vauto_update\x18\x02 \x01(\bR\n" +
	"autoUpdate\x122\n" +
	"\x15update_check_interval\x18\x03 \x01(\x05R\x13updateCheckInterval\"\\\n" +
	"\rSecretsConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x19\n" +
	"\benv_file\x18\x03 \x01(\tR\aenvFile\"f\n" +
	"\x12CertificatesConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1b\n" +
	"\tcert_path\x18\x02 \x01(\tR\bcertPath\x12\x19\n" +
	"\bkey_path\x18\x03 \x01(\tR\akeyPath\"8\n" +
	"\x13StartProcessRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\"j\n" +
	"\x12StopProcessRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\x12\x10\n" +
	"\x03all\x18\x03 \x01(\bR\x03all\"[\n" +
	"\x15RestartProcessRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\"W\n" +
	"\x11GetMetricsRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\"\x9b\x01\n" +
	"\aMetrics\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x123\n" +
	"\tinstances\x18\x02 \x03(\v2\x15.proto.ProcessMetricsR\tinstances\x128\n" +
	"\n" +
	"aggregated\x18\x03 \x01(\v2\x18.proto.AggregatedMetricsR\n" +
	"aggregated\"\x8b\x02\n" +
	"\x0eProcessMetrics\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x12\x1b\n" +
	"\tcpu_usage\x18\x02 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x03 \x01(\x04R\vmemoryUsage\x12\x1b\n" +
	"\tdisk_read\x18\x04 \x01(\x04R\bdiskRead\x12\x1d\n" +
	"\n" +
	"disk_write\x18\x05 \x01(\x04R\tdiskWrite\x12!\n" +
	"\fnetwork_recv\x18\x06 \x01(\x04R\vnetworkRecv\x12!\n" +
	"\fnetwork_sent\x18\a \x01(\x04R\vnetworkSent\x12\x16\n" +
	"\x06uptime\x18\b \x01(\x03R\x06uptime\"\xbe\x02\n" +
	"\x11AggregatedMetrics\x12&\n" +
	"\x0ftotal_cpu_usage\x18\x01 \x01(\x01R\rtotalCpuUsage\x12,\n" +
	"\x12total_memory_usage\x18\x02 \x01(\x04R\x10totalMemoryUsage\x12&\n" +
	"\x0ftotal_disk_read\x18\x03 \x01(\x04R\rtotalDiskRead\x12(\n" +
	"\x10total_disk_write\x18\x04 \x01(\x04R\x0etotalDiskWrite\x12,\n" +
	"\x12total_network_recv\x18\x05 \x01(\x04R\x10totalNetworkRecv\x12,\n" +
	"\x12total_network_sent\x18\x06 \x01(\x04R\x10totalNetworkSent\x12%\n" +
	"\x0einstance_count\x18\a \x01(\x05R\rinstanceCount\"c\n" +
	"\x13ScaleProcessRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12)\n" +
	"\x10target_instances\x18\x02 \x01(\x05R\x0ftargetInstances\"\x8c\x01\n" +
	"\x10UpdateAllRequest\x12\x1a\n" +
	"\bstrategy\x18\x01 \x01(\tR\bstrategy\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12\x18\n" +
	"\atimeout\x18\x03 \x01(\x05R\atimeout\x12,\n" +
	"\x12health_check_delay\x18\x04 \x01(\x05R\x10healthCheckDelay\"\xa3\x01\n" +
	"\x14UpdateProcessRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\x12\x1a\n" +
	"\bstrategy\x18\x04 \x01(\tR\bstrategy\x12\x1c\n" +
	"\tinstances\x18\x05 \x03(\x05R\tinstances\"\x9b\x01\n" +
	"\x0eUpdateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\tupdate_id\x18\x03 \x01(\tR\bupdateId\x128\n" +
	"\tprocesses\x18\x04 \x03(\v2\x1a.proto.ProcessUpdateStatusR\tprocesses\"\xc0\x01\n" +
	"\x13ProcessUpdateStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x0fcurrent_version\x18\x02 \x01(\tR\x0ecurrentVersion\x12%\n" +
	"\x0etarget_version\x18\x03 \x01(\tR\rtargetVersion\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12-\n" +
	"\x12estimated_duration\x18\x05 \x01(\x05R\x11estimatedDuration\"6\n" +
	"\x11GetVersionRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\"\xe1\x01\n" +
	"\vVersionInfo\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12'\n" +
	"\x0fcurrent_version\x18\x02 \x01(\tR\x0ecurrentVersion\x12%\n" +
	"\x0elatest_version\x18\x03 \x01(\tR\rlatestVersion\x12)\n" +
	"\x10update_available\x18\x04 \x01(\bR\x0fupdateAvailable\x124\n" +
	"\tinstances\x18\x05 \x03(\v2\x16.proto.InstanceVersionR\tinstances\"S\n" +
	"\x0fInstanceVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x16\n" +
	"\x06uptime\x18\x03 \x01(\x03R\x06uptime\"\x14\n" +
	"\x12ListUpdatesRequest\"G\n" +
	"\x13ListUpdatesResponse\x120\n" +
	"\aupdates\x18\x01 \x03(\v2\x16.proto.UpdateAvailableR\aupdates\"\xea\x01\n" +
	"\x0fUpdateAvailable\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12'\n" +
	"\x0fcurrent_version\x18\x02 \x01(\tR\x0ecurrentVersion\x12%\n" +
	"\x0elatest_version\x18\x03 \x01(\tR\rlatestVersion\x12!\n" +
	"\frelease_date\x18\x04 \x01(\tR\vreleaseDate\x12#\n" +
	"\rrelease_notes\x18\x05 \x01(\tR\freleaseNotes\x12\x1c\n" +
	"\n" +
	"up_to_date\x18\x06 \x01(\bR\bupToDate\"N\n" +
	"\x0fRollbackRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\xb2\x01\n" +
	"\x10RollbackResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fprocess_name\x18\x02 \x01(\tR\vprocessName\x12!\n" +
	"\ffrom_version\x18\x03 \x01(\tR\vfromVersion\x12\x1d\n" +
	"\n" +
	"to_version\x18\x04 \x01(\tR\ttoVersion\x12\x1f\n" +
	"\vrollback_id\x18\x05 \x01(\tR\n" +
	"rollbackId\"1\n" +
	"\x12WatchUpdateRequest\x12\x1b\n" +
	"\tupdate_id\x18\x01 \x01(\tR\bupdateId\"\xba\x01\n" +
	"\fUpdateStatus\x12\x1b\n" +
	"\tupdate_id\x18\x01 \x01(\tR\bupdateId\x12!\n" +
	"\fprocess_name\x18\x02 \x01(\tR\vprocessName\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x04 \x01(\x05R\bprogress\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\"\a\n" +
	"\x05Empty2\xee\x06\n" +
	"\x0eProcessManager\x12J\n" +
	"\rListProcesses\x12\x1b.proto.ListProcessesRequest\x1a\x1c.proto.ListProcessesResponse\x12:\n" +
	"\n" +
	"GetProcess\x12\x18.proto.GetProcessRequest\x1a\x12.proto.ProcessInfo\x12>\n" +
	"\fStartProcess\x12\x1a.proto.StartProcessRequest\x1a\x12.proto.ProcessInfo\x126\n" +
	"\vStopProcess\x12\x19.proto.StopProcessRequest\x1a\f.proto.Empty\x12B\n" +
	"\x0eRestartProcess\x12\x1c.proto.RestartProcessRequest\x1a\x12.proto.ProcessInfo\x126\n" +
	"\n" +
	"GetMetrics\x12\x18.proto.GetMetricsRequest\x1a\x0e.proto.Metrics\x12>\n" +
	"\fScaleProcess\x12\x1a.proto.ScaleProcessRequest\x1a\x12.proto.ProcessInfo\x12D\n" +
	"\x12UpdateAllProcesses\x12\x17.proto.UpdateAllRequest\x1a\x15.proto.UpdateResponse\x12C\n" +
	"\rUpdateProcess\x12\x1b.proto.UpdateProcessRequest\x1a\x15.proto.UpdateResponse\x12A\n" +
	"\x11GetProcessVersion\x12\x18.proto.GetVersionRequest\x1a\x12.proto.VersionInfo\x12M\n" +
	"\x14ListAvailableUpdates\x12\x19.proto.ListUpdatesRequest\x1a\x1a.proto.ListUpdatesResponse\x12B\n" +
	"\x0fRollbackProcess\x12\x16.proto.RollbackRequest\x1a\x17.proto.RollbackResponse\x12?\n" +
	"\vWatchUpdate\x12\x19.proto.WatchUpdateRequest\x1a\x13.proto.UpdateStatus0\x01B?Z=github.com/yhonda-ohishi-pub-dev/gowinproc/src/internal/protob\x06proto3"

var (
	file_src_internal_proto_process_manager_proto_rawDescOnce sync.Once
	file_src_internal_proto_process_manager_proto_rawDescData []byte
)

func file_src_internal_proto_process_manager_proto_rawDescGZIP() []byte {
	file_src_internal_proto_process_manager_proto_rawDescOnce.Do(func() {
		file_src_internal_proto_process_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_src_internal_proto_process_manager_proto_rawDesc), len(file_src_internal_proto_process_manager_proto_rawDesc)))
	})
	return file_src_internal_proto_process_manager_proto_rawDescData
}

var file_src_internal_proto_process_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_src_internal_proto_process_manager_proto_goTypes = []any{
	(*ListProcessesRequest)(nil),  // 0: proto.ListProcessesRequest
	(*ListProcessesResponse)(nil), // 1: proto.ListProcessesResponse
	(*GetProcessRequest)(nil),     // 2: proto.GetProcessRequest
	(*ProcessInfo)(nil),           // 3: proto.ProcessInfo
	(*ProcessInstance)(nil),       // 4: proto.ProcessInstance
	(*ProcessConfig)(nil),         // 5: proto.ProcessConfig
	(*GitHubConfig)(nil),          // 6: proto.GitHubConfig
	(*SecretsConfig)(nil),         // 7: proto.SecretsConfig
	(*CertificatesConfig)(nil),    // 8: proto.CertificatesConfig
	(*StartProcessRequest)(nil),   // 9: proto.StartProcessRequest
	(*StopProcessRequest)(nil),    // 10: proto.StopProcessRequest
	(*RestartProcessRequest)(nil), // 11: proto.RestartProcessRequest
	(*GetMetricsRequest)(nil),     // 12: proto.GetMetricsRequest
	(*Metrics)(nil),               // 13: proto.Metrics
	(*ProcessMetrics)(nil),        // 14: proto.ProcessMetrics
	(*AggregatedMetrics)(nil),     // 15: proto.AggregatedMetrics
	(*ScaleProcessRequest)(nil),   // 16: proto.ScaleProcessRequest
	(*UpdateAllRequest)(nil),      // 17: proto.UpdateAllRequest
	(*UpdateProcessRequest)(nil),  // 18: proto.UpdateProcessRequest
	(*UpdateResponse)(nil),        // 19: proto.UpdateResponse
	(*ProcessUpdateStatus)(nil),   // 20: proto.ProcessUpdateStatus
	(*GetVersionRequest)(nil),     // 21: proto.GetVersionRequest
	(*VersionInfo)(nil),           // 22: proto.VersionInfo
	(*InstanceVersion)(nil),       // 23: proto.InstanceVersion
	(*ListUpdatesRequest)(nil),    // 24: proto.ListUpdatesRequest
	(*ListUpdatesResponse)(nil),   // 25: proto.ListUpdatesResponse
	(*UpdateAvailable)(nil),       // 26: proto.UpdateAvailable
	(*RollbackRequest)(nil),       // 27: proto.RollbackRequest
	(*RollbackResponse)(nil),      // 28: proto.RollbackResponse
	(*WatchUpdateRequest)(nil),    // 29: proto.WatchUpdateRequest
	(*UpdateStatus)(nil),          // 30: proto.UpdateStatus
	(*Empty)(nil),                 // 31: proto.Empty
}
var file_src_internal_proto_process_manager_proto_depIdxs = []int32{
	4,  // 0: proto.ProcessInfo.instances:type_name -> proto.ProcessInstance
	5,  // 1: proto.ProcessInfo.config:type_name -> proto.ProcessConfig
	14, // 2: proto.ProcessInstance.metrics:type_name -> proto.ProcessMetrics
	6,  // 3: proto.ProcessConfig.github:type_name -> proto.GitHubConfig
	7,  // 4: proto.ProcessConfig.secrets:type_name -> proto.SecretsConfig
	8,  // 5: proto.ProcessConfig.certificates:type_name -> proto.CertificatesConfig
	14, // 6: proto.Metrics.instances:type_name -> proto.ProcessMetrics
	15, // 7: proto.Metrics.aggregated:type_name -> proto.AggregatedMetrics
	20, // 8: proto.UpdateResponse.processes:type_name -> proto.ProcessUpdateStatus
	23, // 9: proto.VersionInfo.instances:type_name -> proto.InstanceVersion
	26, // 10: proto.ListUpdatesResponse.updates:type_name -> proto.UpdateAvailable
	0,  // 11: proto.ProcessManager.ListProcesses:input_type -> proto.ListProcessesRequest
	2,  // 12: proto.ProcessManager.GetProcess:input_type -> proto.GetProcessRequest
	9,  // 13: proto.ProcessManager.StartProcess:input_type -> proto.StartProcessRequest
	10, // 14: proto.ProcessManager.StopProcess:input_type -> proto.StopProcessRequest
	11, // 15: proto.ProcessManager.RestartProcess:input_type -> proto.RestartProcessRequest
	12, // 16: proto.ProcessManager.GetMetrics:input_type -> proto.GetMetricsRequest
	16, // 17: proto.ProcessManager.ScaleProcess:input_type -> proto.ScaleProcessRequest
	17, // 18: proto.ProcessManager.UpdateAllProcesses:input_type -> proto.UpdateAllRequest
	18, // 19: proto.ProcessManager.UpdateProcess:input_type -> proto.UpdateProcessRequest
	21, // 20: proto.ProcessManager.GetProcessVersion:input_type -> proto.GetVersionRequest
	24, // 21: proto.ProcessManager.ListAvailableUpdates:input_type -> proto.ListUpdatesRequest
	27, // 22: proto.ProcessManager.RollbackProcess:input_type -> proto.RollbackRequest
	29, // 23: proto.ProcessManager.WatchUpdate:input_type -> proto.WatchUpdateRequest
	1,  // 24: proto.ProcessManager.ListProcesses:output_type -> proto.ListProcessesResponse
	3,  // 25: proto.ProcessManager.GetProcess:output_type -> proto.ProcessInfo
	3,  // 26: proto.ProcessManager.StartProcess:output_type -> proto.ProcessInfo
	31, // 27: proto.ProcessManager.StopProcess:output_type -> proto.Empty
	3,  // 28: proto.ProcessManager.RestartProcess:output_type -> proto.ProcessInfo
	13, // 29: proto.ProcessManager.GetMetrics:output_type -> proto.Metrics
	3,  // 30: proto.ProcessManager.ScaleProcess:output_type -> proto.ProcessInfo
	19, // 31: proto.ProcessManager.UpdateAllProcesses:output_type -> proto.UpdateResponse
	19, // 32: proto.ProcessManager.UpdateProcess:output_type -> proto.UpdateResponse
	22, // 33: proto.ProcessManager.GetProcessVersion:output_type -> proto.VersionInfo
	25, // 34: proto.ProcessManager.ListAvailableUpdates:output_type -> proto.ListUpdatesResponse
	28, // 35: proto.ProcessManager.RollbackProcess:output_type -> proto.RollbackResponse
	30, // 36: proto.ProcessManager.WatchUpdate:output_type -> proto.UpdateStatus
	24, // [24:37] is the sub-list for method output_type
	11, // [11:24] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_src_internal_proto_process_manager_proto_init() }
func file_src_internal_proto_process_manager_proto_init() {
	if File_src_internal_proto_process_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_src_internal_proto_process_manager_proto_rawDesc), len(file_src_internal_proto_process_manager_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_internal_proto_process_manager_proto_goTypes,
		DependencyIndexes: file_src_internal_proto_process_manager_proto_depIdxs,
		MessageInfos:      file_src_internal_proto_process_manager_proto_msgTypes,
	}.Build()
	File_src_internal_proto_process_manager_proto = out.File
	file_src_internal_proto_process_manager_proto_goTypes = nil
	file_src_internal_proto_process_manager_proto_depIdxs = nil
}
